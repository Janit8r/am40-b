name: Build Batocera with Custom DTS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      batocera_version:
        description: 'Batocera Version'
        required: true
        default: '37'
        type: string
      target_board:
        description: 'Target Board'
        required: true
        default: 'rk3399'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: custom-dts

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git libncurses5-dev libncursesw5-dev \
          libssl-dev libxml2-dev python3 python3-pip python3-dev python3-setuptools python3-wheel \
          unzip rsync bc dosfstools file wget cpio simg2img aria2 texinfo \
          libtool libice-dev libsm-dev intltool xutils-dev xfonts-utils xsltproc \
          xorg-dev libgtk2.0-dev libsdl2-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev

      - name: Clone Batocera repository
        run: |
          git clone https://github.com/batocera-linux/batocera.linux.git
          cd batocera.linux
          git checkout ${{ github.event.inputs.batocera_version || '37' }}

      - name: Copy custom DTS files
        run: |
          mkdir -p batocera.linux/board/batocera/rockchip/rk3399/customdts
          cp custom-dts/rk3399-am40.dtsi batocera.linux/board/batocera/rockchip/rk3399/customdts/
          
          # 创建一个自定义 DTS 文件引用我们的 DTSI
          cat > batocera.linux/board/batocera/rockchip/rk3399/customdts/rk3399-am40.dts << 'EOL'
          /dts-v1/;
          #include "rk3399.dtsi"
          #include "rk3399-am40.dtsi"
          / {
              model = "AM40 (RK3399)";
              compatible = "rockchip,rk3399-am40", "rockchip,rk3399";
          };
          EOL
          
          # 修改 Makefile 或配置文件以包含自定义 DTS
          if [ -f batocera.linux/board/batocera/rockchip/rk3399/linux-defconfig ]; then
            echo "CONFIG_ARM64=y" >> batocera.linux/board/batocera/rockchip/rk3399/linux-defconfig
            echo "CONFIG_ARCH_ROCKCHIP=y" >> batocera.linux/board/batocera/rockchip/rk3399/linux-defconfig
            echo "CONFIG_ARCH_RK3399=y" >> batocera.linux/board/batocera/rockchip/rk3399/linux-defconfig
          fi

      - name: Update kernel build script
        run: |
          cat > batocera.linux/board/batocera/rockchip/rk3399/add-custom-dts.sh << 'EOL'
          #!/bin/bash
          set -e

          # 添加自定义设备树到构建
          if [ -d "${BR2_EXTERNAL_BATOCERA_PATH}/board/batocera/rockchip/rk3399/customdts" ]; then
            echo "Adding custom device tree files..."
            cp -r ${BR2_EXTERNAL_BATOCERA_PATH}/board/batocera/rockchip/rk3399/customdts/* ${LINUX_DIR}/arch/arm64/boot/dts/rockchip/
            
            # 修改 Makefile 添加我们的 DTS
            if grep -q "rk3399-am40.dtb" "${LINUX_DIR}/arch/arm64/boot/dts/rockchip/Makefile"; then
              echo "rk3399-am40.dtb already in Makefile"
            else
              echo "dtb-\$(CONFIG_ARCH_ROCKCHIP) += rk3399-am40.dtb" >> ${LINUX_DIR}/arch/arm64/boot/dts/rockchip/Makefile
            fi
          fi
          EOL
          
          chmod +x batocera.linux/board/batocera/rockchip/rk3399/add-custom-dts.sh
          
          # 修改主构建脚本包含我们的自定义脚本
          if [ -f batocera.linux/board/batocera/rockchip/rk3399/build-batocera.sh ]; then
            sed -i '/make.*ARCH=arm64/i \
            # Add custom device tree files\n\
            . ${BR2_EXTERNAL_BATOCERA_PATH}/board/batocera/rockchip/rk3399/add-custom-dts.sh' batocera.linux/board/batocera/rockchip/rk3399/build-batocera.sh
          fi

      - name: Configure Batocera
        working-directory: batocera.linux
        run: |
          # 确保选择正确的配置
          make ${{ github.event.inputs.target_board || 'rk3399' }}_defconfig

      - name: Build Batocera
        working-directory: batocera.linux
        run: |
          # 使用多核心加速编译
          make -j$(nproc)
        timeout-minutes: 360  # 给构建足够的时间

      - name: Compress output image
        run: |
          cd batocera.linux/output/images
          xz -k -9 -T0 batocera.img

      - name: Upload Batocera image
        uses: actions/upload-artifact@v4
        with:
          name: batocera-${{ github.event.inputs.target_board || 'rk3399' }}-image
          path: batocera.linux/output/images/batocera.img.xz
          retention-days: 7

      - name: Upload build logs
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            batocera.linux/output/build/*.log
            batocera.linux/output/build/*.log.bz2
          retention-days: 3
