name: Build RK3399 AM40 DTB files for kernel 6.14.5

on:
  push:
    paths:
      - '**.dts'
      - '**.dtsi'
      - '.github/workflows/build-dtb-only.yml'
  pull_request:
    paths:
      - '**.dts'
      - '**.dtsi'
  workflow_dispatch:
    inputs:
      kernel_version:
        description: 'Linux kernel version'
        required: true
        default: '6.14.5'

jobs:
  build-dtb:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y device-tree-compiler wget

    - name: Download kernel headers
      run: |
        KERNEL_VERSION="${{ github.event.inputs.kernel_version || '6.14.5' }}"
        wget -q https://cdn.kernel.org/pub/linux/kernel/v6.x/linux-${KERNEL_VERSION}.tar.xz
        tar -xf linux-${KERNEL_VERSION}.tar.xz --strip-components=1 linux-${KERNEL_VERSION}/include/dt-bindings
        mkdir -p include
        mv dt-bindings include/

    - name: Create output directory
      run: mkdir -p build

    - name: Clean DTS files
      run: |
        # Create preprocessed files first (to resolve includes)
        cpp -nostdinc -I. -I./include -undef -x assembler-with-cpp am40-user.dts build/am40-user.preprocessed.dts

    - name: Compile DTB file
      run: |
        dtc -I dts -O dtb -o build/am40-user.dtb build/am40-user.preprocessed.dts
        ls -la build/

    - name: Package DTB files
      run: |
        KERNEL_VERSION="${{ github.event.inputs.kernel_version || '6.14.5' }}"
        mkdir -p dtb-package/boot/dtbs/${KERNEL_VERSION}/rockchip
        cp build/am40-user.dtb dtb-package/boot/dtbs/${KERNEL_VERSION}/rockchip/
        
        # Create install script - using | for proper YAML multiline string
        cat > dtb-package/install.sh << 'EOFSCRIPT'
#!/bin/bash
set -e

# Script to install AM40 DTB files to Batocera
echo "AM40 RK3399 Batocera DTB installer for kernel 6.14.5"

# Check if running as root
if [ "$(id -u)" -ne 0 ]; then
    echo "This script must be run as root" 
    exit 1
fi

# Configuration
BATOCERA_BOOT="/boot"
BATOCERA_DTB_DIR="$BATOCERA_BOOT/boot/dtbs"
KERNEL_VERSION="6.14.5"

# Find correct DTB directory based on kernel version
if [ -d "$BATOCERA_DTB_DIR/$KERNEL_VERSION" ]; then
    DTB_VERSION_DIR="$BATOCERA_DTB_DIR/$KERNEL_VERSION"
elif [ -d "$BATOCERA_DTB_DIR/6.14" ]; then
    DTB_VERSION_DIR="$BATOCERA_DTB_DIR/6.14"
    KERNEL_VERSION="6.14"
else
    echo "Could not find kernel 6.14.5 DTB directory. Are you using the correct kernel version?"
    echo "Available kernel DTB directories:"
    ls -la "$BATOCERA_DTB_DIR"
    exit 1
fi

# Create the rockchip directory if it doesn't exist
ROCKCHIP_DTB_DIR="$DTB_VERSION_DIR/rockchip"
mkdir -p "$ROCKCHIP_DTB_DIR"

# Backup existing DTB files
echo "Backing up existing DTB files..."
if [ -f "$ROCKCHIP_DTB_DIR/am40-user.dtb" ]; then
    cp "$ROCKCHIP_DTB_DIR/am40-user.dtb" "$ROCKCHIP_DTB_DIR/am40-user.dtb.backup"
fi

# Copy the custom DTB file
echo "Installing custom DTB file..."
cp "boot/dtbs/$KERNEL_VERSION/rockchip/am40-user.dtb" "$ROCKCHIP_DTB_DIR/"

# Update the extlinux.conf file if needed
EXTLINUX_CONF="$BATOCERA_BOOT/extlinux/extlinux.conf"
if [ -f "$EXTLINUX_CONF" ]; then
    echo "Updating boot configuration..."
    # Check if the FDT line is already set to our DTB
    if grep -q "FDT /boot/dtbs/.*/rockchip/am40-user.dtb" "$EXTLINUX_CONF"; then
        echo "Boot configuration already set to use am40-user.dtb"
    else
        # Make a backup of the original file
        cp "$EXTLINUX_CONF" "$EXTLINUX_CONF.backup"
        
        # Update the FDT line to use our DTB
        sed -i "s|FDT .*|FDT /boot/dtbs/$KERNEL_VERSION/rockchip/am40-user.dtb|g" "$EXTLINUX_CONF"
        
        echo "Updated boot configuration to use am40-user.dtb"
    fi
fi

echo "Installation complete. Please reboot your system for changes to take effect."
echo "If the system fails to boot, you can restore the backup DTB files by booting in recovery mode."
EOFSCRIPT
        
        chmod +x dtb-package/install.sh
        
        # Create README - using different EOF marker
        cat > dtb-package/README.md << 'EOFREADME'
# AM40 RK3399 DTB files for Batocera Linux 6.14.5

This package contains the custom Device Tree Binary (DTB) files for running Batocera Linux with kernel 6.14.5 on the AM40 RK3399 board.

## Installation

1. Extract this package to a USB drive or directly to your Batocera system
2. Run the install script as root:
   ```
   chmod +x install.sh
   sudo ./install.sh
   ```
3. Reboot your system

## Manual Installation

If you prefer to install manually:

1. Copy the DTB file to the correct location:
   ```
   sudo cp boot/dtbs/6.14.5/rockchip/am40-user.dtb /boot/boot/dtbs/6.14.5/rockchip/
   ```
   
2. Update your boot configuration in `/boot/extlinux/extlinux.conf` to use the new DTB:
   ```
   FDT /boot/dtbs/6.14.5/rockchip/am40-user.dtb
   ```

3. Reboot your system

## Recovery

If your system fails to boot after installing these files, boot in recovery mode and restore the original DTB files from the backup.
EOFREADME
        
        # Create archive
        cd dtb-package
        tar -czf ../build/am40-dtb-${KERNEL_VERSION}.tar.gz .
        cd ..
        ls -la build/

    - name: Upload DTB artifacts
      uses: actions/upload-artifact@v3
      with:
        name: am40-dtb-files
        path: |
          build/am40-user.dtb
          build/am40-dtb-*.tar.gz
        retention-days: 7

    - name: Create Release
      if: github.event_name == 'workflow_dispatch' || github.event_name == 'push' && github.ref == 'refs/heads/main'
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        name: AM40 DTB files for kernel ${{ github.event.inputs.kernel_version || '6.14.5' }}
        tag_name: dtb-v${{ github.event.inputs.kernel_version || '6.14.5' }}
        draft: false
        prerelease: false
        files: |
          build/am40-user.dtb
          build/am40-dtb-*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
